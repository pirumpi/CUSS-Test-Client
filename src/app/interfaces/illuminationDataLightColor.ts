/**
 * Common Use Self Service V2 API Definition
 * <h3>Definiton of the new CUSS2 API.</h3>This API definition idescribes IATA Common Use Self Service (IATA RP 1706c), a standard that allows multiple airlines to share physical kiosks or other hardware devices to offer self-services to their passengers. These services include, but are not limited to passenger check-in functionality and self-service baggage drop off. The standard also defines how airlines and other application suppliers can develop CUSS-compliant applications that are able to run on any device whose platform is CUSS-compliant.<br><br>The API definiton is accompanied by the CUSS Specification (CUSS-TS), describing in human readable form (textual and graphical) the concepts, requirements, interaction, workflows and behavior for both CUSS platforms and CUSS applications, and the CUSS Implementation Guide (CUSS-IG) describing best practices and giving examples on how to implement CUSS compliant platforms- and applications.<br><br>The API requires and includes further schema definitions/domains as<br><br>- CUSS2 Basic Schemas<br>- CUSS2 Self Bag Drop<br>- CUSS2 Biometrics<br>- CUSS2 Payments<br>- CUSS2 Illumination<br><br>The IATA Common Use Group (CUG) and the CUSS Technical Solution Group (CUSS-TSG) maintain this API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { RgbType } from './rgbType';

/**
 * The color of the ligth in RGB values. A value of 255,255,255 means white, a value of 0,0,0 (black) would switch the light off. Instead of separate values for RGB named colour values may be used. - Light may support only a single colour.
 */
export interface IlluminationDataLightColor { 
    /**
     * Predefined values: CLR_ON, CLR_OFF, CLR_RED, CLR_GREEN, CLR_BLUE, CLR_DARKRED, CLR_DARKGREEN, CLR_DARKBLUE, CLR_YELLOW, CLR_MAGENTA, CLR_CYAN, CLR_AMBER, CLR_PURPLE, CLR_SPRINGGREEN,CLR_WHITE
     */
    name?: IlluminationDataLightColor.NameEnum;
    rgb?: RgbType;
}
export namespace IlluminationDataLightColor {
    export type NameEnum = 'CLR_ON' | 'CLR_OFF' | 'CLR_RED' | 'CLR_GREEN' | 'CLR_BLUE' | 'CLR_DARKRED' | 'CLR_DARKGREEN' | 'CLR_DARKBLUE' | 'CLR_YELLOW' | 'CLR_MAGENTA' | 'CLR_CYAN' | 'CLR_AMBER' | 'CLR_PURPLE' | 'CLR_SPRINGGREEN' | 'CLR_WHITE';
    export const NameEnum = {
        ON: 'CLR_ON' as NameEnum,
        OFF: 'CLR_OFF' as NameEnum,
        RED: 'CLR_RED' as NameEnum,
        GREEN: 'CLR_GREEN' as NameEnum,
        BLUE: 'CLR_BLUE' as NameEnum,
        DARKRED: 'CLR_DARKRED' as NameEnum,
        DARKGREEN: 'CLR_DARKGREEN' as NameEnum,
        DARKBLUE: 'CLR_DARKBLUE' as NameEnum,
        YELLOW: 'CLR_YELLOW' as NameEnum,
        MAGENTA: 'CLR_MAGENTA' as NameEnum,
        CYAN: 'CLR_CYAN' as NameEnum,
        AMBER: 'CLR_AMBER' as NameEnum,
        PURPLE: 'CLR_PURPLE' as NameEnum,
        SPRINGGREEN: 'CLR_SPRINGGREEN' as NameEnum,
        WHITE: 'CLR_WHITE' as NameEnum
    };
}