/**
 * Common Use Self Service V2 API Definition
 * <h3>Definiton of the new CUSS2 API.</h3>This API definition idescribes IATA Common Use Self Service (IATA RP 1706c), a standard that allows multiple airlines to share physical kiosks or other hardware devices to offer self-services to their passengers. These services include, but are not limited to passenger check-in functionality and self-service baggage drop off. The standard also defines how airlines and other application suppliers can develop CUSS-compliant applications that are able to run on any device whose platform is CUSS-compliant.<br><br>The API definiton is accompanied by the CUSS Specification (CUSS-TS), describing in human readable form (textual and graphical) the concepts, requirements, interaction, workflows and behavior for both CUSS platforms and CUSS applications, and the CUSS Implementation Guide (CUSS-IG) describing best practices and giving examples on how to implement CUSS compliant platforms- and applications.<br><br>The API requires and includes further schema definitions/domains as<br><br>- CUSS2 Basic Schemas<br>- CUSS2 Self Bag Drop<br>- CUSS2 Biometrics<br>- CUSS2 Payments<br>- CUSS2 Illumination<br><br>The IATA Common Use Group (CUG) and the CUSS Technical Solution Group (CUSS-TSG) maintain this API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { BiometricProviderMessage } from './biometricProviderMessage';
import { CommonUseBiometricMessageCharacteristics } from './commonUseBiometricMessageCharacteristics';
import { VersionString } from './versionString';

/**
 * Common use message document root element.
 */
export interface CommonUseBiometricMessage { 
    /**
     * The document type that is included in this message
     */
    documentType: CommonUseBiometricMessage.DocumentTypeEnum;
    schemaVersion: VersionString;
    /**
     * An arbitrary tracking value that the CUSS application chooses and assigns when starting a biometric provider function. The CUSS platform must then echo this requested value in all subsequent responses or asynchronous event messages related to that biometric provider function. This correlation permits a CUSS application to match and associate request and response messages and is critical for the case where an application has more than one multi-step biometric provider function ongoing concurrently.
     */
    sessionID?: string;
    characteristics?: CommonUseBiometricMessageCharacteristics;
    biometricProviderMessage?: BiometricProviderMessage;
    /**
     * Error code as reported from the CUSS platform.
     */
    errorResponse?: CommonUseBiometricMessage.ErrorResponseEnum;
}
export namespace CommonUseBiometricMessage {
    export type DocumentTypeEnum = 'characteristics' | 'biometricProviderMessage' | 'errorResponse';
    export const DocumentTypeEnum = {
        Characteristics: 'characteristics' as DocumentTypeEnum,
        BiometricProviderMessage: 'biometricProviderMessage' as DocumentTypeEnum,
        ErrorResponse: 'errorResponse' as DocumentTypeEnum
    };
    export type ErrorResponseEnum = 'data-error' | 'format-error' | 'illogical';
    export const ErrorResponseEnum = {
        DataError: 'data-error' as ErrorResponseEnum,
        FormatError: 'format-error' as ErrorResponseEnum,
        Illogical: 'illogical' as ErrorResponseEnum
    };
}